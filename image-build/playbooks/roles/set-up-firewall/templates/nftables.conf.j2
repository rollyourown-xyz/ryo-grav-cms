#!/usr/sbin/nft -f
# SPDX-FileCopyrightText: 2022 Wilfred Nicoll <xyzroller@rollyourown.xyz>
# SPDX-License-Identifier: GPL-3.0-or-later

# Flush rules
flush ruleset

table inet filter {

    chain inbound {

        # By default, drop inbound traffic
        type filter hook input priority filter; policy drop;

        # Allow established and related connections
        ct state established,related accept

        # Drop invalid packets
        ct state invalid drop

        # Allow inbound traffic on loopback interface
        iifname "lo" accept

        # Allow IPv6 neighbour discovery
        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept

        # Allow inbound ICMP echo-request with rate limit
        icmp type echo-request limit rate 5/second accept
        icmpv6 type echo-request limit rate 5/second accept

        # Allow IPv6 DHCPv6
        udp dport dhcpv6-client accept


        ## Consul Client Ports
        ######################

        # Allow Consul LAN Serf on TCP and UDP Ports 8301 from LXD network
        udp dport 8301 ip saddr {{ lxd_host_network_part }}.0/24 accept
        #
        # THE FOLLOWING IS EXPERIMENTAL
        tcp dport 8301 ip6 saddr {{ host_public_ipv6_prefix }}::{{lxd_host_network_ipv6_subnet}}:0/112 accept
        # END EXPERIMENTAL
        #

        ## NGINX Ports
        ##############

        # Allow HTTP from LXD and wireguard networks
        tcp dport 80 ip saddr {{ lxd_host_network_part }}.0/24 accept
        tcp dport 80 ip saddr {{ wireguard_address_network_part }}.0/24 accept
        #
        # THE FOLLOWING IS EXPERIMENTAL
        tcp dport 80 ip6 saddr {{ host_public_ipv6_prefix }}::{{lxd_host_network_ipv6_subnet}}:0/112 accept
        tcp dport 80 ip6 saddr {{ wireguard_address_network_ipv6_prefix }}::/64 accept
        # END EXPERIMENTAL
        #
    }

    chain forward {
        # By default, drop forwarded traffic
        type filter hook forward priority filter; policy drop;
    }

    chain outbound {
        # By default, allow outbound traffic
        type filter hook output priority filter; policy accept;

        # Allow outbound traffic to loopback interface
        oifname "lo" accept
        oifname "lo" ip daddr != 127.0.0.0/8 drop
        oifname "lo" ip6 daddr != ::1/128 drop
    }
}


table inet nat {

    chain prerouting {
        type nat hook prerouting priority dstnat;
    }

    chain output {
        type nat hook output priority filter;

        # Map localhost DNS port 53 to Consul listening port
        udp dport 53 ip daddr 127.0.0.1 redirect to 8600
        tcp dport 53 ip daddr 127.0.0.1 redirect to 8600
        #
        # THE FOLLOWING IS EXPERIMENTAL
        udp dport 53 ip6 daddr ::1/128 redirect to 8600
        tcp dport 53 ip6 daddr ::1/128 redirect to 8600
        # END EXPERIMENTAL
        #
    }

    chain postrouting {
        type nat hook postrouting priority srcnat;
    }
}
